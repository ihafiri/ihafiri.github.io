<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Issa&#39;s Blog</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 02 May 2018 14:16:40 -0400</pubDate>
    <lastBuildDate>Wed, 02 May 2018 14:16:40 -0400</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 25 Apr 2018 14:59:30 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2018/04/25/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2018/04/25/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Start a Tor hidden service in less than 10 minutes</title>
        <description>&lt;p&gt;I have been playing around with TOR for a while and how it can be used by attackers to launch attacks while hiding their identity using the dark web.&lt;/p&gt;
&lt;p&gt;One interesting feature of TOR is the ability to host a hidden service where other users can access it while maintaining the anonmity of that service&#39;s owner.&lt;/p&gt;
&lt;p&gt;
Start by installing apache web server on a Linux VM. here I am using my trusty Debian VM:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install apache2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


Build your awesome hidden-service-to-be and place it in the web server&#39;s directory (Apache uses /var/www/html by default). At this phase I am not interested in a fully-fledged dymanic site, so a simple HTML page will do:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to the Darkweb!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


Next, Install TOR on the server and run it:


&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;apt-get install tor
/etc/init.d/tor start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;


It is always a good idea to double check that TOR is running. Your server should be listening on 9050 and have a connection established to port 443
&lt;/p&gt;

&lt;p&gt;Because the the tor hidden service will utilize port 80, I prefer to have to have apache on a different por. This can be done by modifying the /etc/apache2/ports.conf file. In this scenario, I changed the port to 8080 and restarted the apache process in order for changes to take effect:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Listen 8080

&amp;lt;IfModule ssl_module&amp;gt;
        Listen 443
&amp;lt;/IfModule&amp;gt;

&amp;lt;IfModule mod_gnutls.c&amp;gt;
        Listen 443
&amp;lt;/IfModule&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
Some configuration needs to be done from TOR side. To do this, the following two lines were added to /etc/tor/torrc where the first line specifies an already exsisting directory that the tor process has read and write permissions to and the second line specifies the tor service port(80) and the original source of the server(127.0.0.1:8080):
&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  HiddenServiceDir /var/lib/tor/hidden_services/
  HiddenServicePort 80 127.0.0.1:8080&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;
Restart the TOR process after modifying the the configuration file above. then cd to the directory you specified in HiddenServiceDir. if everything worked well you should have two newly created files:
*hostname: which contains your .onion link to the TOR hidden service
*private_key: which resembles the ID of your hidden service. This file is very important and if it falls in other people&#39;s hands they will be able to impersonate your hidden service. so keep it safe!
&lt;/p&gt;
&lt;p&gt;Finally to check if your service is up and running, you can use a TOR browser and navigate to .onion link found in hostname, or use tor2web https://tor2web.org/ which acts as a proxy and allows you to browse hidden services from the regular web&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Apr 2018 00:00:00 -0400</pubDate>
        <link>http://yourdomain.com/2018/04/25/issa.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2018/04/25/issa.html</guid>
        
        
      </item>
    
  </channel>
</rss>
